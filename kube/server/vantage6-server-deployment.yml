# vantage6-server-deployment.yml
#
# This YAML file defines the deployment and service configurations for the Vantage6
# server backend and frontend components. The architecture includes a LoadBalancer for
# external access, an Ingress Controller for routing, and separate services for the
# backend and frontend.
#
# Architecture Overview:
# +-------------------+       +---------------------+       +-------------------+
# |   LoadBalancer    |------>|      Ingress        |------>|   Backend Service |
# | (External Access) |       | (Ingress Controller)|       |  Frontend Service |
# +-------------------+       +---------------------+       +-------------------+
#
# The LoadBalancer exposes the Ingress Controller to external traffic. The Ingress
# Controller manages routing rules and directs traffic to the appropriate service based
# on the request path or host. The backend and frontend services route traffic to their
# respective pods.
#
# Backend Service: Handles the server-side logic and API endpoints.
# Frontend Service: Handles the client-side application and user interface.
#
# This configuration ensures that the Vantage6 server components are properly deployed,
# exposed, and accessible within the Kubernetes cluster.
#
# - [ ] write documentation
# - [ ] add RabbitMQ service
# - [ ] add algorithm store service

apiVersion: apps/v1
kind: Deployment
metadata:
  name: vantage6-server-backend
  labels:
    app: vantage6-server-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vantage6-server-backend
  template:
    metadata:
      labels:
        app: vantage6-server-backend
    spec:
      containers:
      - name: vantage6-server-backend
        image: harbor2.vantage6.ai/infrastructure/server:5.0.0a0
        ports:
        - containerPort: 7601
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        command: [
          "uwsgi", "--http", ":7601", "--gevent", "1000", "--http-websockets",
          "--master", "--callable", "app", "--disable-logging", "--wsgi-file",
          "/vantage6/vantage6-server/vantage6/server/wsgi.py", "--pyargv",
          "/mnt/config.yaml",
        ]
        volumeMounts:
        - name: config-file
          mountPath: /mnt/config.yaml
          subPath: config.yaml

      volumes:
      - name: config-file
        configMap:
          name: vantage6-server-config
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:13
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: vantage6
        - name: POSTGRES_USER
          value: vantage6user
        - name: POSTGRES_PASSWORD
          value: vantage6password
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
spec:
  ports:
    - port: 5672
      targetPort: 5672
  selector:
    app: rabbitmq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management
        ports:
        - containerPort: 5672
        - containerPort: 15672
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: rabbitmquser
        - name: RABBITMQ_DEFAULT_PASS
          value: rabbitmquserpassword
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vantage6-server-frontend
  labels:
    app: vantage6-server-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vantage6-server-frontend
  template:
    metadata:
      labels:
        app: vantage6-server-frontend
    spec:
      containers:
      - name: vantage6-server-frontend
        image: harbor2.vantage6.ai/infrastructure/ui:5.0.0a0
        ports:
        - containerPort: 80
        env:
        - name: SERVER_URL
          value: http://localhost
        - name: API_PATH
          value: /api
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vantage6-server-ingress
spec:
  ingressClassName: nginx
  rules:
  - host: localhost
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: vantage6-server-backend-service
            port:
              number: 80
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vantage6-server-frontend-service
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: vantage6-server-frontend-service
spec:
  selector:
    app: vantage6-server-frontend
  ports:
    - protocol: TCP
      port: 80          # External port for the UI
      targetPort: 80    # Container port for the UI
      name: vantage6-server-frontend
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: vantage6-server-backend-service
spec:
  selector:
    app: vantage6-server-backend
  ports:
    - protocol: TCP
      port: 80          # External port for the server
      targetPort: 7601  # Container port for the server
      name: vantage6-server-backend
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vantage6-server-config
data:
  config.yaml: |
    algorithm_stores: []
    allow_drop_all: 'True'
    api_path: /api
    description: Vantage6 server version 5
    ip: 0.0.0.0
    jwt_secret_key: 90251a41-f4c1-441c-8e62-a2d51bd47de9
    logging:
      backup_count: 5
      datefmt: '%Y-%m-%d %H:%M:%S'
      file: five.log
      format: '%(asctime)s - %(name)-14s - %(levelname)-8s - %(message)s'
      level: DEBUG
      loggers:
      - level: warning
        name: urllib3
      - level: warning
        name: socketIO-client
      - level: warning
        name: socketio.server
      - level: warning
        name: engineio.server
      - level: warning
        name: sqlalchemy.engine
      - level: warning
        name: requests_oauthlib.oauth2_session
      max_size: 1024
      use_console: true
    port: '7601'
    server_url: http://localhost/api
    uri: postgresql://vantage6user:vantage6password@postgres-service:5432/vantage6
    rabbitmq:
      uri: amqp://rabbitmquser:rabbitmquserpassword@rabbitmq-service:5672//vantage6
      start_with_server: false